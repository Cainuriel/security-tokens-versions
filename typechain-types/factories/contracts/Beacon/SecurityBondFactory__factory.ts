/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SecurityBondFactory,
  SecurityBondFactoryInterface,
} from "../../../contracts/Beacon/SecurityBondFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_beacon",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bondProxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "BondCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "beacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "createBond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deployedBonds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexOfDeployedBonds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalOfBondsCreated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalOfBondsCreatedByBeneficiary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610cc8380380610cc883398101604081905261002f91610117565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816100c7565b506001600160a01b0381166100b65760405162461bcd60e51b815260206004820152601d60248201527f426561636f6e20616464726573732063616e6e6f74206265207a65726f000000604482015260640161004d565b6001600160a01b0316608052610147565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561012957600080fd5b81516001600160a01b038116811461014057600080fd5b9392505050565b608051610b606101686000396000818160df015261018b0152610b606000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063010e4f53146100885780632e96d6f9146100b157806359659e90146100da5780636264ccc5146101015780636459164f14610118578063715018a61461013857806374c4228f146101425780638da5cb5b14610162578063f2fde38b1461016a575b600080fd5b61009b6100963660046103cb565b61017d565b6040516100a89190610492565b60405180910390f35b61009b6100bf3660046104a6565b6001602052600090815260409020546001600160a01b031681565b61009b7f000000000000000000000000000000000000000000000000000000000000000081565b61010a60045481565b6040519081526020016100a8565b61010a6101263660046104bf565b60026020526000908152604090205481565b6101406102a0565b005b61010a6101503660046104bf565b60036020526000908152604090205481565b61009b6102b4565b6101406101783660046104bf565b6102c3565b600061018761030a565b60007f0000000000000000000000000000000000000000000000000000000000000000846040516101b79061038c565b6101c29291906104e1565b604051809103906000f0801580156101de573d6000803e3d6000fd5b5060048054600090815260016020908152604080832080546001600160a01b0319166001600160a01b03871690811790915584549084526003909252822081905592935061022b8361053e565b90915550506001600160a01b03831660009081526002602052604081208054916102548361053e565b9190505550826001600160a01b0316816001600160a01b03167f535735cdac5d586cb40b3eb153bfced0b96d144cfe9b8947f5f9ed69895ae80b60405160405180910390a39392505050565b6102a861030a565b6102b2600061033c565b565b6000546001600160a01b031690565b6102cb61030a565b6001600160a01b0381166102fe576000604051631e4fbdf760e01b81526004016102f59190610492565b60405180910390fd5b6103078161033c565b50565b336103136102b4565b6001600160a01b0316146102b2573360405163118cdaa760e01b81526004016102f59190610492565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105c58061056683390190565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146103c657600080fd5b919050565b600080604083850312156103de57600080fd5b82356001600160401b038111156103f457600080fd5b8301601f8101851361040557600080fd5b80356001600160401b0381111561041e5761041e610399565b604051601f8201601f19908116603f011681016001600160401b038111828210171561044c5761044c610399565b60405281815282820160200187101561046457600080fd5b81602084016020830137600060208383010152809450505050610489602084016103af565b90509250929050565b6001600160a01b0391909116815260200190565b6000602082840312156104b857600080fd5b5035919050565b6000602082840312156104d157600080fd5b6104da826103af565b9392505050565b60018060a01b0383168152604060208201526000825180604084015260005b8181101561051d5760208186018101516060868401015201610500565b506000606082850101526060601f19601f8301168401019150509392505050565b60006001820161055e57634e487b7160e01b600052601160045260246000fd5b506001019056fe60a06040526040516105c53803806105c583398101604081905261002291610387565b61002c828261003e565b506001600160a01b0316608052610484565b610047826100fe565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156100f2576100ed826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e7919061044d565b82610211565b505050565b6100fa610288565b5050565b806001600160a01b03163b60000361013957604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d9919061044d565b9050806001600160a01b03163b6000036100fa57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610130565b6060600080846001600160a01b03168460405161022e9190610468565b600060405180830381855af49150503d8060008114610269576040519150601f19603f3d011682016040523d82523d6000602084013e61026e565b606091505b50909250905061027f8583836102a9565b95945050505050565b34156102a75760405163b398979f60e01b815260040160405180910390fd5b565b6060826102be576102b982610308565b610301565b81511580156102d557506001600160a01b0384163b155b156102fe57604051639996b31560e01b81526001600160a01b0385166004820152602401610130565b50805b9392505050565b8051156103185780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80516001600160a01b038116811461034857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561037e578181015183820152602001610366565b50506000910152565b6000806040838503121561039a57600080fd5b6103a383610331565b60208401519092506001600160401b038111156103bf57600080fd5b8301601f810185136103d057600080fd5b80516001600160401b038111156103e9576103e961034d565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104175761041761034d565b60405281815282820160200187101561042f57600080fd5b610440826020830160208601610363565b8093505050509250929050565b60006020828403121561045f57600080fd5b61030182610331565b6000825161047a818460208701610363565b9190910192915050565b60805161012761049e6000396000601e01526101276000f3fe6080604052600a600c565b005b60186014601a565b60a0565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156079573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190609b919060c3565b905090565b3660008037600080366000845af43d6000803e80801560be573d6000f35b3d6000fd5b60006020828403121560d457600080fd5b81516001600160a01b038116811460ea57600080fd5b939250505056fea26469706673582212205ebd3eaa744d1bbe64cf8c7347d321afa7b9dd77f2c81a49f74e638d621cf5f364736f6c634300081c0033a26469706673582212206b1ba8618fdf31731479c650c9d422008136e285d31c59a7c30fc81361b554db64736f6c634300081c0033";

type SecurityBondFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecurityBondFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecurityBondFactory__factory extends ContractFactory {
  constructor(...args: SecurityBondFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _beacon: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_beacon, overrides || {});
  }
  override deploy(
    _beacon: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_beacon, overrides || {}) as Promise<
      SecurityBondFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SecurityBondFactory__factory {
    return super.connect(runner) as SecurityBondFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecurityBondFactoryInterface {
    return new Interface(_abi) as SecurityBondFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SecurityBondFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SecurityBondFactory;
  }
}
