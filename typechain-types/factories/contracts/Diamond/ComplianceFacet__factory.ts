/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ComplianceFacet,
  ComplianceFacetInterface,
} from "../../../contracts/Diamond/ComplianceFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "InsufficientBalanceForReversal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "InvalidTransactionRecord",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "requiredRole",
        type: "bytes32",
      },
    ],
    name: "UnauthorizedRole",
    type: "error",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "complianceFacetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getComplianceInfo",
    outputs: [
      {
        internalType: "string",
        name: "isinCode",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenType",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenJurisdiction",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalTransactions",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getTransactionRecord",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct LibSecurityToken.TransactionRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getTransactionRecords",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct LibSecurityToken.TransactionRecord[]",
        name: "records",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "asFrom",
        type: "bool",
      },
    ],
    name: "getTransactionRecordsForAccount",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct LibSecurityToken.TransactionRecord[]",
        name: "records",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instrumentType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isin",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jurisdiction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revertTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610ec38061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c8063107182f0146100ca57806321daeacc146100f45780632bde1bac14610114578063355274ea14610129578063355d1ee61461013f57806375b238fc1461015f578063826a5d561461016757806382d5a60d1461016f578063a217fddf14610177578063a6c6c11c1461017f578063b77bf60014610194578063d53913931461019c578063d6bef3d0146101a4578063e63ab1e9146101bd578063eea99bc0146101c5575b600080fd5b6100dd6100d8366004610bd1565b6101e6565b6040516100eb929190610c78565b60405180910390f35b610107610102366004610c9a565b610369565b6040516100eb9190610ce4565b61011c610544565b6040516100eb9190610d44565b6101316105df565b6040519081526020016100eb565b61015261014d366004610d57565b6105f2565b6040516100eb9190610d70565b610131610660565b61011c610673565b61011c61068b565b6101316106a3565b61019261018d366004610d57565b6106b6565b005b610131610953565b610131610966565b6101ac610979565b6040516100eb959493929190610d84565b610131610b59565b6040805180820190915260058152640312e302e360dc1b602082015261011c565b60606000806101f3610b6c565b90508060100154915081851061023d576040805160008082526020820190925290610234565b610221610b90565b8152602001906001900390816102195790505b50925050610362565b60006102498587610dfe565b9050828111156102565750815b60006102628783610e11565b9050806001600160401b0381111561027c5761027c610dd2565b6040519080825280602002602001820160405280156102b557816020015b6102a2610b90565b81526020019060019003908161029a5790505b50945060005b8181101561035d57600f840160006102d3838b610dfe565b6102de906001610dfe565b81526020808201929092526040908101600020815160a0810183528154815260018201546001600160a01b039081169482019490945260028201549093169183019190915260038101546060830152600401546080820152865187908390811061034a5761034a610e24565b60209081029190910101526001016102bb565b505050505b9250929050565b60606000610375610b6c565b9050600060015b826010015481116103fc576000818152600f8401602052604090208580156103b3575060018101546001600160a01b038881169116145b806103d65750851580156103d6575060028101546001600160a01b038881169116145b156103e957826103e581610e3a565b9350505b50806103f481610e3a565b91505061037c565b50806001600160401b0381111561041557610415610dd2565b60405190808252806020026020018201604052801561044e57816020015b61043b610b90565b8152602001906001900390816104335790505b509250600060015b8360100154811161053a576000818152600f85016020526040902086801561048d575060018101546001600160a01b038981169116145b806104b05750861580156104b0575060028101546001600160a01b038981169116145b15610527576040805160a0810182528254815260018301546001600160a01b039081166020830152600284015416918101919091526003820154606082015260048201546080820152865187908590811061050d5761050d610e24565b6020026020010181905250828061052390610e3a565b9350505b508061053281610e3a565b915050610456565b5050505092915050565b606061054e610b6c565b600b01805461055c90610e53565b80601f016020809104026020016040519081016040528092919081815260200182805461058890610e53565b80156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b5050505050905090565b60006105e9610b6c565b60060154905090565b6105fa610b90565b610602610b6c565b6000928352600f016020908152604092839020835160a0810185528154815260018201546001600160a01b03908116938201939093526002820154909216938201939093526003830154606082015260049092015460808301525090565b600061066a610b6c565b60110154905090565b606061067d610b6c565b600c01805461055c90610e53565b6060610695610b6c565b600a01805461055c90610e53565b60006106ad610b6c565b60140154905090565b6106be610b6c565b6011015460006106cc610b6c565b6000838152600882016020908152604080832033845290915290205490915060ff16610719576040516358abe3b560e11b8152336004820152602481018390526044015b60405180910390fd5b6000610723610b6c565b6000858152600f82016020908152604091829020825160a0810184528154815260018201546001600160a01b039081169382018490526002830154169381019390935260038101546060840152600401546080830152919250901580610794575060408101516001600160a01b0316155b156107b557604051630216bbb160e61b815260048101869052602401610710565b60608101516040808301516001600160a01b0316600090815260208590522054101561082b5760408181015160608301516001600160a01b0390911660008181526020869052839020549251630d3b42b960e31b8152600481019190915260248101919091526044810191909152606401610710565b60608101516040808301516001600160a01b031660009081526020859052908120805490919061085c908490610e11565b909155505060608101516020808301516001600160a01b0316600090815290849052604081208054909190610892908490610dfe565b9250508190555060018260100160008282546108ae9190610dfe565b90915550506040805160a0810182526010840154808252838301516001600160a01b03908116602080850191825280870151831685870190815260609788015197860197885242608087019081526000958652600f909901909152949092209251835590516001830180546001600160a01b03199081169284169290921790559251600283018054909416911617909155905160038201559051600490910155505050565b600061095d610b6c565b60100154905090565b6000610970610b6c565b60120154905090565b6060806060600080600061098b610b6c565b905080600a0181600b0182600c01836006015484601001548480546109af90610e53565b80601f01602080910402602001604051908101604052809291908181526020018280546109db90610e53565b8015610a285780601f106109fd57610100808354040283529160200191610a28565b820191906000526020600020905b815481529060010190602001808311610a0b57829003601f168201915b50505050509450838054610a3b90610e53565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6790610e53565b8015610ab45780601f10610a8957610100808354040283529160200191610ab4565b820191906000526020600020905b815481529060010190602001808311610a9757829003601f168201915b50505050509350828054610ac790610e53565b80601f0160208091040260200160405190810160405280929190818152602001828054610af390610e53565b8015610b405780601f10610b1557610100808354040283529160200191610b40565b820191906000526020600020905b815481529060010190602001808311610b2357829003601f168201915b5050505050925095509550955095509550509091929394565b6000610b63610b6c565b60130154905090565b7f10747f78c4ed48b23afd6119064f0748da54fb6a544d1f8f604eaf457d56867d90565b6040518060a001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b60008060408385031215610be457600080fd5b50508035926020909101359150565b805182526020808201516001600160a01b03908116918401919091526040808301519091169083015260608082015190830152608090810151910152565b600081518084526020840193506020830160005b82811015610c6e57610c58868351610bf3565b60a0959095019460209190910190600101610c45565b5093949350505050565b604081526000610c8b6040830185610c31565b90508260208301529392505050565b60008060408385031215610cad57600080fd5b82356001600160a01b0381168114610cc457600080fd5b915060208301358015158114610cd957600080fd5b809150509250929050565b602081526000610cf76020830184610c31565b9392505050565b6000815180845260005b81811015610d2457602081850181015186830182015201610d08565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610cf76020830184610cfe565b600060208284031215610d6957600080fd5b5035919050565b60a08101610d7e8284610bf3565b92915050565b60a081526000610d9760a0830188610cfe565b8281036020840152610da98188610cfe565b90508281036040840152610dbd8187610cfe565b60608401959095525050608001529392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610d7e57610d7e610de8565b81810381811115610d7e57610d7e610de8565b634e487b7160e01b600052603260045260246000fd5b600060018201610e4c57610e4c610de8565b5060010190565b600181811c90821680610e6757607f821691505b602082108103610e8757634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209ec0f2f13d6e52625b7f4d39262e621f1cc9fe8b972a77b0a2d91bf01c109d7864736f6c634300081c0033";

type ComplianceFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplianceFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplianceFacet__factory extends ContractFactory {
  constructor(...args: ComplianceFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ComplianceFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ComplianceFacet__factory {
    return super.connect(runner) as ComplianceFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplianceFacetInterface {
    return new Interface(_abi) as ComplianceFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComplianceFacet {
    return new Contract(address, _abi, runner) as unknown as ComplianceFacet;
  }
}
