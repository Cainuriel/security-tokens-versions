/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ComplianceFacet,
  ComplianceFacetInterface,
} from "../../../contracts/Diamond/ComplianceFacet";

const _abi = [
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getTransactionRecord",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct LibSecurityToken.TransactionRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instrumentType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isin",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jurisdiction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionId",
        type: "uint256",
      },
    ],
    name: "revertTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506107a08061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80632bde1bac1461009e578063355274ea146100bc578063355d1ee6146100d257806375b238fc14610130578063826a5d561461013857806382d5a60d14610140578063a217fddf14610148578063a6c6c11c14610150578063b77bf60014610165578063d53913931461016d578063e63ab1e914610175575b600080fd5b6100a661017d565b6040516100b39190610687565b60405180910390f35b6100c4610218565b6040519081526020016100b3565b6100e56100e03660046106d5565b61022b565b60408051825181526020808401516001600160a01b0390811691830191909152838301511691810191909152606080830151908201526080918201519181019190915260a0016100b3565b6100c46102d5565b6100a66102e8565b6100a6610300565b6100c4610318565b61016361015e3660046106d5565b61032b565b005b6100c461062a565b6100c461063d565b6100c4610650565b6060610187610663565b600b018054610195906106ee565b80601f01602080910402602001604051908101604052809291908181526020018280546101c1906106ee565b801561020e5780601f106101e35761010080835404028352916020019161020e565b820191906000526020600020905b8154815290600101906020018083116101f157829003601f168201915b5050505050905090565b6000610222610663565b60060154905090565b61026f6040518060a001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b610277610663565b6000928352600f016020908152604092839020835160a0810185528154815260018201546001600160a01b03908116938201939093526002820154909216938201939093526003830154606082015260049092015460808301525090565b60006102df610663565b60110154905090565b60606102f2610663565b600c018054610195906106ee565b606061030a610663565b600a018054610195906106ee565b6000610322610663565b60140154905090565b610333610663565b601101546000610341610663565b6000838152600882016020908152604080832033845290915290205490915060ff166103c35760405162461bcd60e51b815260206004820152602660248201527f416363657373436f6e74726f6c3a206163636f756e74206973206d697373696e6044820152656720726f6c6560d01b60648201526084015b60405180910390fd5b60006103cd610663565b6000858152600f82016020908152604091829020825160a0810184528154815260018201546001600160a01b0390811693820184905260028301541693810193909352600381015460608401526004015460808301529192509015801590610441575060408101516001600160a01b031615155b61048a5760405162461bcd60e51b815260206004820152601a602482015279125b9d985b1a59081d1c985b9cd858dd1a5bdb881c9958dbdc9960321b60448201526064016103ba565b60608101516040808301516001600160a01b031660009081526020859052205410156105025760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e742062616c616e636520666f7220726576657273616044820152601b60fa1b60648201526084016103ba565b60608101516040808301516001600160a01b031660009081526020859052908120805490919061053390849061073e565b909155505060608101516020808301516001600160a01b0316600090815290849052604081208054909190610569908490610757565b9250508190555060018260100160008282546105859190610757565b90915550506040805160a0810182526010840154808252838301516001600160a01b03908116602080850191825280870151831685870190815260609788015197860197885242608087019081526000958652600f909901909152949092209251835590516001830180546001600160a01b03199081169284169290921790559251600283018054909416911617909155905160038201559051600490910155505050565b6000610634610663565b60100154905090565b6000610647610663565b60120154905090565b600061065a610663565b60130154905090565b7f4913ddf4c966b457f5d50f87a47c411d66b61feacb08ac6bcb434154c81c5c9c90565b602081526000825180602084015260005b818110156106b55760208186018101516040868401015201610698565b506000604082850101526040601f19601f83011684010191505092915050565b6000602082840312156106e757600080fd5b5035919050565b600181811c9082168061070257607f821691505b60208210810361072257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561075157610751610728565b92915050565b808201808211156107515761075161072856fea2646970667358221220d15bad188aade62f4e2895488b6acf866cf28774d2985f32857f36443b71f01b64736f6c634300081c0033";

type ComplianceFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplianceFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplianceFacet__factory extends ContractFactory {
  constructor(...args: ComplianceFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ComplianceFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ComplianceFacet__factory {
    return super.connect(runner) as ComplianceFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplianceFacetInterface {
    return new Interface(_abi) as ComplianceFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComplianceFacet {
    return new Contract(address, _abi, runner) as unknown as ComplianceFacet;
  }
}
