/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../contracts/Diamond/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061061c8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100845780637a0ed62714610099578063adfca15e146100ae578063cdffacc6146100ce575b600080fd5b61006f61006a366004610436565b6100f9565b60405190151581526020015b60405180910390f35b61008c61012a565b60405161007b9190610467565b6100a1610196565b60405161007b91906104f9565b6100c16100bc36600461057e565b610333565b60405161007b91906105a7565b6100e16100dc366004610436565b6103dd565b6040516001600160a01b03909116815260200161007b565b600080610104610412565b6001600160e01b0319909316600090815260039093016020525050604090205460ff1690565b60606000610136610412565b6002810180546040805160208084028201810190925282815293945083018282801561018b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161016d575b505050505091505090565b606060006101a2610412565b6002810154909150806001600160401b038111156101c2576101c26105ba565b60405190808252806020026020018201604052801561020857816020015b6040805180820190915260008152606060208201528152602001906001900390816101e05790505b50925060005b8181101561032d57600083600201828154811061022d5761022d6105d0565b9060005260206000200160009054906101000a90046001600160a01b0316905080858381518110610260576102606105d0565b6020908102919091018101516001600160a01b0392831690529082166000908152600186018252604090819020805482518185028101850190935280835291929091908301828280156102ff57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116102c15790505b5050505050858381518110610316576103166105d0565b60209081029190910181015101525060010161020e565b50505090565b6060600061033f610412565b6001600160a01b038416600090815260018201602090815260409182902080548351818402810184019094528084529394509192908301828280156103d057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103925790505b5050505050915050919050565b6000806103e8610412565b6001600160e01b03199093166000908152602093909352505060409020546001600160a01b031690565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60006020828403121561044857600080fd5b81356001600160e01b03198116811461046057600080fd5b9392505050565b602080825282518282018190526000918401906040840190835b818110156104a85783516001600160a01b0316835260209384019390920191600101610481565b509095945050505050565b600081518084526020840193506020830160005b828110156104ef5781516001600160e01b0319168652602095860195909101906001016104c7565b5093949350505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561057257868503603f19018452815180516001600160a01b0316865260209081015160409187018290529061055c908701826104b3565b9550506020938401939190910190600101610521565b50929695505050505050565b60006020828403121561059057600080fd5b81356001600160a01b038116811461046057600080fd5b60208152600061046060208301846104b3565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212205c5615365d72b853ed346657bb322dbcbd7aafe1504600264a729a81b4dff26a64736f6c634300081c0033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondLoupeFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondLoupeFacet__factory {
    return super.connect(runner) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondLoupeFacet;
  }
}
