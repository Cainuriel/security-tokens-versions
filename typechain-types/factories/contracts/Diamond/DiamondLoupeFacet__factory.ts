/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../contracts/Diamond/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610e228061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c1461008c5780637a0ed627146100aa578063adfca15e146100c8578063cdffacc6146100f8575b600080fd5b61007660048036038101906100719190610926565b610128565b604051610083919061096e565b60405180910390f35b610094610203565b6040516100a19190610a79565b60405180910390f35b6100b26102f0565b6040516100bf9190610c58565b60405180910390f35b6100e260048036038101906100dd9190610ca6565b6105fd565b6040516100ef9190610d42565b60405180910390f35b610112600480360381019061010d9190610926565b610738565b60405161011f9190610d73565b60405180910390f35b600061013e675087d41ce945240b60c01b610815565b610152670f8f322f4951e08b60c01b610815565b610166671b657818978f448160c01b610815565b6000610170610818565b9050610186674974bdae22d30a4860c01b610815565b61019a675b5c4a6f0d88485660c01b610815565b806003016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff16915050919050565b606061021967e774321196d3efbe60c01b610815565b61022d67b5414d64d3adde0b60c01b610815565b6102416726c6f70857dfef1560c01b610815565b600061024b610818565b905061026167a41f3730c6006ef560c01b610815565b806002018054806020026020016040519081016040528092919081815260200182805480156102e557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161029b575b505050505091505090565b606061030667ae43c6ffd62bdba960c01b610815565b61031a6768a488fd13a83a2d60c01b610815565b61032e676541febcbf44725f60c01b610815565b6000610338610818565b905061034e672d25b837d8cc20aa60c01b610815565b61036267ca405b996f1551bf60c01b610815565b60008160020180549050905061038267fe74f446bd26f0dd60c01b610815565b8067ffffffffffffffff81111561039c5761039b610d8e565b5b6040519080825280602002602001820160405280156103d557816020015b6103c2610899565b8152602001906001900390816103ba5790505b5092506103ec67dbb2643e9ebbd10f60c01b610815565b61040067287d25db100f1e6560c01b610815565b60005b818110156105f75761041f670d64718fb428b2e660c01b610815565b61043367e1f1fb2093adbe2060c01b610815565b600083600201828154811061044b5761044a610dbd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061048c67f6d09ad457c5eeff60c01b610815565b808583815181106104a05761049f610dbd565b5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506104f2673e67b950456852a060c01b610815565b8360010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156105c257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161056f5790505b50505050508583815181106105da576105d9610dbd565b5b602002602001015160200181905250508080600101915050610403565b50505090565b6060610613678a1e8f1f19536a5d60c01b610815565b6106276766536f9ebb8af04f60c01b610815565b61063b675ed6eeef37fdaf1a60c01b610815565b6000610645610818565b905061065b67bde8a8eb636d744a60c01b610815565b8060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561072b57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106d85790505b5050505050915050919050565b600061074e67e810e9d45726f21b60c01b610815565b6107626749427ace392905b860c01b610815565b61077667215af3b15442c16860c01b610815565b6000610780610818565b9050610796671fe8a3b6d5e1ffde60c01b610815565b806000016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b50565b600061082e67ddd6ed301d947b7160c01b610896565b61084267dd621f23c288842e60c01b610896565b61085667785ac35719b38cfa60c01b610896565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c905061088f674276a3649612d07460c01b610896565b8091505090565b50565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610903816108ce565b811461090e57600080fd5b50565b600081359050610920816108fa565b92915050565b60006020828403121561093c5761093b6108c9565b5b600061094a84828501610911565b91505092915050565b60008115159050919050565b61096881610953565b82525050565b6000602082019050610983600083018461095f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109e0826109b5565b9050919050565b6109f0816109d5565b82525050565b6000610a0283836109e7565b60208301905092915050565b6000602082019050919050565b6000610a2682610989565b610a308185610994565b9350610a3b836109a5565b8060005b83811015610a6c578151610a5388826109f6565b9750610a5e83610a0e565b925050600181019050610a3f565b5085935050505092915050565b60006020820190508181036000830152610a938184610a1b565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610afc816108ce565b82525050565b6000610b0e8383610af3565b60208301905092915050565b6000602082019050919050565b6000610b3282610ac7565b610b3c8185610ad2565b9350610b4783610ae3565b8060005b83811015610b78578151610b5f8882610b02565b9750610b6a83610b1a565b925050600181019050610b4b565b5085935050505092915050565b6000604083016000830151610b9d60008601826109e7565b5060208301518482036020860152610bb58282610b27565b9150508091505092915050565b6000610bce8383610b85565b905092915050565b6000602082019050919050565b6000610bee82610a9b565b610bf88185610aa6565b935083602082028501610c0a85610ab7565b8060005b85811015610c465784840389528151610c278582610bc2565b9450610c3283610bd6565b925060208a01995050600181019050610c0e565b50829750879550505050505092915050565b60006020820190508181036000830152610c728184610be3565b905092915050565b610c83816109d5565b8114610c8e57600080fd5b50565b600081359050610ca081610c7a565b92915050565b600060208284031215610cbc57610cbb6108c9565b5b6000610cca84828501610c91565b91505092915050565b600082825260208201905092915050565b6000610cef82610ac7565b610cf98185610cd3565b9350610d0483610ae3565b8060005b83811015610d35578151610d1c8882610b02565b9750610d2783610b1a565b925050600181019050610d08565b5085935050505092915050565b60006020820190508181036000830152610d5c8184610ce4565b905092915050565b610d6d816109d5565b82525050565b6000602082019050610d886000830184610d64565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122067933beadda898a90c04cf01b3704adcf6edaa2d6412390db8dc3d5699bafc7d64736f6c634300081c0033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondLoupeFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondLoupeFacet__factory {
    return super.connect(runner) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondLoupeFacet;
  }
}
