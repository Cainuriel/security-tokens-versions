/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Diamond,
  DiamondInterface,
  IDiamondCut,
} from "../../../contracts/Diamond/Diamond";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260405161144b38038061144b83398101604081905261002291610e87565b61002b336100a1565b610036838383610101565b600061004061031f565b6301ffc9a760e01b600090815260039091016020526040808220805460ff1990811660019081179092556307e4c70760e21b845282842080548216831790556348e2b09360e01b84529190922080549091169091179055506112f792505050565b60006100ab61031f565b6004810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b83518110156102d457600084828151811061012157610121611052565b60200260200101516020015190506000600281111561014257610142611068565b81600281111561015457610154611068565b036101a8576101a385838151811061016e5761016e611052565b60200260200101516000015186848151811061018c5761018c611052565b60200260200101516040015161034360201b60201c565b6102cb565b60018160028111156101bc576101bc611068565b0361020b576101a38583815181106101d6576101d6611052565b6020026020010151600001518684815181106101f4576101f4611052565b6020026020010151604001516104c060201b60201c565b600281600281111561021f5761021f611068565b0361026e576101a385838151811061023957610239611052565b60200260200101516000015186848151811061025757610257611052565b60200260200101516040015161064660201b60201c565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084015b60405180910390fd5b50600101610104565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051610308939291906110aa565b60405180910390a161031a828261075d565b505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b60008151116103645760405162461bcd60e51b81526004016102c2906111b9565b600061036e61031f565b90506001600160a01b0383166103965760405162461bcd60e51b81526004016102c290611204565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036103cc576103cc828561085d565b60005b83518110156104b95760008482815181106103ec576103ec611052565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104925760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c726561647920657869737473000000000000000000000060648201526084016102c2565b61049e8583868a6108c7565b836104a881611266565b945050600190920191506103cf9050565b5050505050565b60008151116104e15760405162461bcd60e51b81526004016102c2906111b9565b60006104eb61031f565b90506001600160a01b0383166105135760405162461bcd60e51b81526004016102c290611204565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361054957610549828561085d565b60005b83518110156104b957600084828151811061056957610569611052565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036106145760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016102c2565b61061f858284610967565b61062b8583868a6108c7565b8361063581611266565b9450506001909201915061054c9050565b60008151116106675760405162461bcd60e51b81526004016102c2906111b9565b600061067161031f565b90506001600160a01b038316156106f05760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d75737420626520616464726573732830290000000000000000000060648201526084016102c2565b60005b825181101561075757600083828151811061071057610710611052565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031661074d848284610967565b50506001016106f3565b50505050565b6001600160a01b03821661076f575050565b610791826040518060600160405280602881526020016113ff60289139610d2a565b600080836001600160a01b0316836040516107ac9190611292565b600060405180830381855af49150503d80600081146107e7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ec565b606091505b509150915081610757578051156108065780518082602001fd5b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016102c2565b61087f8160405180606001604052806024815260200161142760249139610d2a565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166109e35760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016102c2565b306001600160a01b03831603610a525760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016102c2565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610aa1916112ae565b9050808214610b93576001600160a01b03841660009081526001860160205260408120805483908110610ad657610ad6611052565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610b2757610b27611052565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610bbc57610bbc6112c7565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036104b9576002850154600090610c1f906001906112ae565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610cce576000876002018381548110610c5e57610c5e611052565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610c8f57610c8f611052565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610ce157610ce16112c7565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816107575760405162461bcd60e51b81526004016102c291906112dd565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610d8357610d83610d4b565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610db157610db1610d4b565b604052919050565b60006001600160401b03821115610dd257610dd2610d4b565b5060051b60200190565b80516001600160a01b0381168114610df357600080fd5b919050565b60005b83811015610e13578181015183820152602001610dfb565b50506000910152565b600082601f830112610e2d57600080fd5b81516001600160401b03811115610e4657610e46610d4b565b610e59601f8201601f1916602001610d89565b818152846020838601011115610e6e57600080fd5b610e7f826020830160208701610df8565b949350505050565b600080600060608486031215610e9c57600080fd5b83516001600160401b03811115610eb257600080fd5b8401601f81018613610ec357600080fd5b8051610ed6610ed182610db9565b610d89565b8082825260208201915060208360051b850101925088831115610ef857600080fd5b602084015b8381101561100d5780516001600160401b03811115610f1b57600080fd5b85016060818c03601f19011215610f3157600080fd5b610f39610d61565b610f4560208301610ddc565b8152604082015160038110610f5957600080fd5b602082015260608201516001600160401b03811115610f7757600080fd5b6020818401019250508b601f830112610f8f57600080fd5b8151610f9d610ed182610db9565b8082825260208201915060208360051b86010192508e831115610fbf57600080fd5b6020850194505b82851015610ff75784516001600160e01b031981168114610fe657600080fd5b825260209485019490910190610fc6565b6040840152505084525060209283019201610efd565b5095506110209250505060208501610ddc565b60408501519092506001600160401b0381111561103c57600080fd5b61104886828701610e1c565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60008151808452611096816020860160208601610df8565b601f01601f19169290920160200192915050565b6000606082016060835280865180835260808501915060808160051b86010192506020880160005b8281101561118a57868503607f19018452815180516001600160a01b03168652602081015160608701906003811061111a57634e487b7160e01b600052602160045260246000fd5b806020890152506040820151915060606040880152808251808352608089019150602084019350600092505b808310156111725783516001600160e01b03191682526020938401936001939093019290910190611146565b509650505060209384019391909101906001016110d2565b5050506001600160a01b03861660208501525082810360408401526111af818561107e565b9695505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b0382166002600160601b0319810161128957611289611250565b60010192915050565b600082516112a4818460208701610df8565b9190910192915050565b818103818111156112c1576112c1611250565b92915050565b634e487b7160e01b600052603160045260246000fd5b6020815260006112f0602083018461107e565b9392505050565b60fa806113056000396000f3fe608060405236600a57005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b03168060a15760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374604482015260640160405180910390fd5b3660008037600080366000845af43d6000803e80801560bf573d6000f35b3d6000fdfea26469706673582212208b86f5ec5220d6d796b65879fae49891c2eef63f7e762fa2278472b4b72a4f5a64736f6c634300081c00334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465";

type DiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Diamond__factory extends ContractFactory {
  constructor(...args: DiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _diamondCut: IDiamondCut.FacetCutStruct[],
    _init: AddressLike,
    _calldata: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _diamondCut,
      _init,
      _calldata,
      overrides || {}
    );
  }
  override deploy(
    _diamondCut: IDiamondCut.FacetCutStruct[],
    _init: AddressLike,
    _calldata: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _diamondCut,
      _init,
      _calldata,
      overrides || {}
    ) as Promise<
      Diamond & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Diamond__factory {
    return super.connect(runner) as Diamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondInterface {
    return new Interface(_abi) as DiamondInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Diamond {
    return new Contract(address, _abi, runner) as unknown as Diamond;
  }
}
