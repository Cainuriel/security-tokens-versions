/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondInit,
  DiamondInitInterface,
} from "../../../contracts/Diamond/DiamondInit";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_isin",
        type: "string",
      },
      {
        internalType: "string",
        name: "_instrumentType",
        type: "string",
      },
      {
        internalType: "string",
        name: "_jurisdiction",
        type: "string",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506105b28061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063839cb5ec14610030575b600080fd5b61004361003e366004610334565b610045565b005b6001600160a01b03811661009e5760405162461bcd60e51b815260206004820152601c60248201527b41646d696e20616464726573732063616e6e6f74206265207a65726f60201b604482015260640160405180910390fd5b7f4913ddf4c966b457f5d50f87a47c411d66b61feacb08ac6bcb434154c81c5c9c7f4913ddf4c966b457f5d50f87a47c411d66b61feacb08ac6bcb434154c81c5c9f6100ea89826104be565b50600481016100f988826104be565b5060058101805460ff1916601217905560068101869055600a810161011e86826104be565b50600b810161012d85826104be565b50600c810161013c84826104be565b506000601482018181557fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775601184019081557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6601285019081557f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6013860190815584805260088601602081815260408088206001600160a01b03909a16808952998252808820805460ff19908116600190811790925587548a52848452828a208c8b528452828a20805482168317905586548a52848452828a208c8b528452828a20805482168317905585548a529383528189209a8952998252808820805490931690991790915593548354865260099096019093528584209490945554925482528382208390555481529190912055505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261029c57600080fd5b81356001600160401b038111156102b5576102b5610275565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102e3576102e3610275565b6040528181528382016020018510156102fb57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b038116811461032f57600080fd5b919050565b600080600080600080600060e0888a03121561034f57600080fd5b87356001600160401b0381111561036557600080fd5b6103718a828b0161028b565b97505060208801356001600160401b0381111561038d57600080fd5b6103998a828b0161028b565b9650506040880135945060608801356001600160401b038111156103bc57600080fd5b6103c88a828b0161028b565b94505060808801356001600160401b038111156103e457600080fd5b6103f08a828b0161028b565b93505060a08801356001600160401b0381111561040c57600080fd5b6104188a828b0161028b565b92505061042760c08901610318565b905092959891949750929550565b600181811c9082168061044957607f821691505b60208210810361046957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104b957806000526020600020601f840160051c810160208510156104965750805b601f840160051c820191505b818110156104b657600081556001016104a2565b50505b505050565b81516001600160401b038111156104d7576104d7610275565b6104eb816104e58454610435565b8461046f565b6020601f82116001811461051f57600083156105075750848201515b600019600385901b1c1916600184901b1784556104b6565b600084815260208120601f198516915b8281101561054f578785015182556020948501946001909201910161052f565b508482101561056d5786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea2646970667358221220419cf449ade56796690822630f0a8b2b12c6f88dc01fcd2d2ef118861d40d9f064736f6c634300081c0033";

type DiamondInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondInit__factory extends ContractFactory {
  constructor(...args: DiamondInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondInit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondInit__factory {
    return super.connect(runner) as DiamondInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondInitInterface {
    return new Interface(_abi) as DiamondInitInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DiamondInit {
    return new Contract(address, _abi, runner) as unknown as DiamondInit;
  }
}
