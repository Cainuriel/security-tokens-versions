/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondInit,
  DiamondInitInterface,
} from "../../../contracts/Diamond/DiamondInit";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "paramName",
        type: "string",
      },
    ],
    name: "EmptyString",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAdminAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroCap",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "isin",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "instrumentType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "jurisdiction",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "DiamondInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "diamondInitVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_isin",
        type: "string",
      },
      {
        internalType: "string",
        name: "_instrumentType",
        type: "string",
      },
      {
        internalType: "string",
        name: "_jurisdiction",
        type: "string",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506108378061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063839cb5ec1461003b578063cc3f108414610050575b600080fd5b61004e6100493660046104e5565b610080565b005b60408051808201825260058152640312e302e360dc1b60208201529051610077919061062c565b60405180910390f35b6001600160a01b0381166100a757604051633ef39b8160e01b815260040160405180910390fd5b846000036100c85760405163dd616a4560e01b815260040160405180910390fd5b865160000361010c576040516318a996bb60e21b8152600401610103906020808252600490820152636e616d6560e01b604082015260600190565b60405180910390fd5b8551600003610147576040516318a996bb60e21b81526020600482015260066024820152651cde5b589bdb60d21b6044820152606401610103565b8351600003610182576040516318a996bb60e21b81526004016101039060208082526004908201526334b9b4b760e11b604082015260600190565b82516000036101c5576040516318a996bb60e21b815260206004820152600e60248201526d696e737472756d656e745479706560901b6044820152606401610103565b8151600003610206576040516318a996bb60e21b815260206004820152600c60248201526b353ab934b9b234b1ba34b7b760a11b6044820152606401610103565b7f10747f78c4ed48b23afd6119064f0748da54fb6a544d1f8f604eaf457d56867d7f10747f78c4ed48b23afd6119064f0748da54fb6a544d1f8f604eaf457d56868061025289826106cf565b506004810161026188826106cf565b5060058101805460ff1916601217905560068101869055600a810161028686826106cf565b50600b810161029585826106cf565b50600c81016102a484826106cf565b506000601482018181557fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775601184019081557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6601285019081557f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6013860190815584805260088601602081815260408088206001600160a01b038b16808a52908352818920805460ff19908116600190811790925588548b52858552838b20838c528552838b20805482168317905587548b52858552838b20838c528552838b20805482168317905586548b52948452828a20828b528452828a20805490951617909355955485548852600989019091528587205592549154855283852082905554845282842055601084018390556002840192909255517fc4c25076728c74593217d047cda194d74bdac11499f7dda55b292a44b468844290610414908b908b908b908b908b908b9061078d565b60405180910390a25050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261044d57600080fd5b81356001600160401b0381111561046657610466610426565b604051601f8201601f19908116603f011681016001600160401b038111828210171561049457610494610426565b6040528181528382016020018510156104ac57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b03811681146104e057600080fd5b919050565b600080600080600080600060e0888a03121561050057600080fd5b87356001600160401b0381111561051657600080fd5b6105228a828b0161043c565b97505060208801356001600160401b0381111561053e57600080fd5b61054a8a828b0161043c565b9650506040880135945060608801356001600160401b0381111561056d57600080fd5b6105798a828b0161043c565b94505060808801356001600160401b0381111561059557600080fd5b6105a18a828b0161043c565b93505060a08801356001600160401b038111156105bd57600080fd5b6105c98a828b0161043c565b9250506105d860c089016104c9565b905092959891949750929550565b6000815180845260005b8181101561060c576020818501810151868301820152016105f0565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061063f60208301846105e6565b9392505050565b600181811c9082168061065a57607f821691505b60208210810361067a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106ca57806000526020600020601f840160051c810160208510156106a75750805b601f840160051c820191505b818110156106c757600081556001016106b3565b50505b505050565b81516001600160401b038111156106e8576106e8610426565b6106fc816106f68454610646565b84610680565b6020601f82116001811461073057600083156107185750848201515b600019600385901b1c1916600184901b1784556106c7565b600084815260208120601f198516915b828110156107605787850151825560209485019460019092019101610740565b508482101561077e5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60c0815260006107a060c08301896105e6565b82810360208401526107b281896105e6565b905086604084015282810360608401526107cc81876105e6565b905082810360808401526107e081866105e6565b905082810360a08401526107f481856105e6565b999850505050505050505056fea2646970667358221220cb295e3159180371ab830e1c9443332b4504e70a3a9cc55107846a9ddd00e86564736f6c634300081c0033";

type DiamondInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondInit__factory extends ContractFactory {
  constructor(...args: DiamondInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondInit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondInit__factory {
    return super.connect(runner) as DiamondInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondInitInterface {
    return new Interface(_abi) as DiamondInitInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DiamondInit {
    return new Contract(address, _abi, runner) as unknown as DiamondInit;
  }
}
