/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OwnershipFacet,
  OwnershipFacetInterface,
} from "../../../contracts/Diamond/OwnershipFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061060c8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b14610059575b600080fd5b610043610075565b60405161005091906104ba565b60405180910390f35b610073600480360381019061006e9190610506565b6100ac565b005b600061008b6739eb1cc6e6e1f2b160c01b610124565b61009f67d7304f25816b84e760c01b610124565b6100a7610127565b905090565b6100c067558278bf550a5aae60c01b610124565b6100d467fd1c60834dfc516b60c01b610124565b6100e867fe00546b05eceb9760c01b610124565b6100f0610182565b6101046735c86b6f1f5ca63c60c01b610124565b610118672637dc8e21df4bd460c01b610124565b61012181610281565b50565b50565b600061013d67fc8c8edfdcd068e260c01b6103f8565b6101516787f8e1cf1ba4d79f60c01b6103f8565b6101596103fb565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61019667cfe97a64e0c4273160c01b6103f8565b6101aa6789822b959ef33cc560c01b6103f8565b6101be6759bccb49f71de9e660c01b6103f8565b6101d26732ddf5de4b7659ae60c01b6103f8565b6101da6103fb565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610262906105b6565b60405180910390fd5b61027f67ae157a696f86513c60c01b6103f8565b565b61029567a8925262be1f79d460c01b6103f8565b6102a967167a627159e5ccf260c01b6103f8565b6102bd67c7056c494d91e9aa60c01b6103f8565b60006102c76103fb565b90506102dd674499f066d28d526e60c01b6103f8565b6102f1674557c230857c230960c01b6103f8565b60008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061032e67ab00c95507e13b9560c01b6103f8565b828260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103856735616fc127f7db3f60c01b6103f8565b6103996789b9276722d2b43160c01b6103f8565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b50565b600061041167ddd6ed301d947b7160c01b6103f8565b61042567dd621f23c288842e60c01b6103f8565b61043967785ac35719b38cfa60c01b6103f8565b60007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9050610472674276a3649612d07460c01b6103f8565b8091505090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a482610479565b9050919050565b6104b481610499565b82525050565b60006020820190506104cf60008301846104ab565b92915050565b600080fd5b6104e381610499565b81146104ee57600080fd5b50565b600081359050610500816104da565b92915050565b60006020828403121561051c5761051b6104d5565b5b600061052a848285016104f1565b91505092915050565b600082825260208201905092915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006105a0602283610533565b91506105ab82610544565b604082019050919050565b600060208201905081810360008301526105cf81610593565b905091905056fea264697066735822122060a4bebf85c57594056b2ce2ae565e52c59aa2d5c4609d912b8a0ca8519f7f1764736f6c634300081c0033";

type OwnershipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnershipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnershipFacet__factory extends ContractFactory {
  constructor(...args: OwnershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OwnershipFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OwnershipFacet__factory {
    return super.connect(runner) as OwnershipFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnershipFacetInterface {
    return new Interface(_abi) as OwnershipFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OwnershipFacet {
    return new Contract(address, _abi, runner) as unknown as OwnershipFacet;
  }
}
