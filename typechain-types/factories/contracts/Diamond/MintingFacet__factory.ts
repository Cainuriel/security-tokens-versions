/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MintingFacet,
  MintingFacetInterface,
} from "../../../contracts/Diamond/MintingFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "BurnAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnFromZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "CapExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
    ],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "requiredRole",
        type: "bytes32",
      },
    ],
    name: "UnauthorizedRole",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "burnableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMintingInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingFacetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610bb38061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806340c10f191461008857806342966c681461009d5780634297aae7146100b05780635dd871a3146100e05780636773bfe61461010357806368573107146101245780636cafd0df1461013757806379cc67901461014e578063ae3baf4d14610161575b600080fd5b61009b610096366004610969565b610169565b005b61009b6100ab366004610993565b61035b565b60408051808201825260058152640312e302e360dc1b602082015290516100d791906109ac565b60405180910390f35b6100f36100ee366004610993565b610368565b60405190151581526020016100d7565b6101166101113660046109fa565b610393565b6040519081526020016100d7565b61009b610132366004610a67565b6103bc565b61013f61068b565b6040516100d793929190610ad6565b61009b61015c366004610969565b6106bc565b610116610773565b61017161079a565b60120154600061017f61079a565b6000838152600882016020908152604080832033845290915290205490915060ff166101cb5733826040516358abe3b560e11b81526004016101c2929190610aec565b60405180910390fd5b6001600160a01b0384166101f157604051622e076360e81b815260040160405180910390fd5b60006101fb61079a565b905080600601548482600201546102129190610b1b565b111561023e5760028101546006820154604051630cf95ce560e01b81526101c292918791600401610ad6565b838160020160008282546102529190610b1b565b90915550506001600160a01b0385166000908152602082905260408120805486929061027f908490610b1b565b92505081905550600181601001600082825461029b9190610b1b565b90915550506040805160a0810182526010830154808252600060208084018281526001600160a01b038b8116868801818152606088018d81524260808a01908152978752600f8b019095528886209751885592516001880180549184166001600160a01b031992831617905592516002880180549190931693169290921790559051600385015591516004909301929092559151600080516020610b5e8339815191529061034c9088815260200190565b60405180910390a35050505050565b61036533826107be565b50565b60008061037361079a565b9050806006015483826002015461038a9190610b1b565b11159392505050565b600061039d61079a565b6001600160a01b03909216600090815260209290925250604090205490565b6103c461079a565b6012015460006103d261079a565b6000838152600882016020908152604080832033845290915290205490915060ff166104155733826040516358abe3b560e11b81526004016101c2929190610aec565b84831461045d5760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064016101c2565b600061046761079a565b90506000805b858110156104a35786868281811061048757610487610b34565b90506020020135826104999190610b1b565b915060010161046d565b5081600601548183600201546104b99190610b1b565b11156104e55760028201546006830154604051630cf95ce560e01b81526101c292918491600401610ad6565b60005b8781101561066757600089898381811061050457610504610b34565b905060200201602081019061051991906109fa565b9050600088888481811061052f5761052f610b34565b60200291909101359150506001600160a01b03821661056057604051622e076360e81b815260040160405180910390fd5b6001600160a01b03821660009081526020869052604081208054839290610588908490610b1b565b9250508190555060018560100160008282546105a49190610b1b565b90915550506040805160a0810182526010870154808252600060208084018281526001600160a01b03888116868801818152606088018a81524260808a01908152978752600f8f019095528886209751885592516001880180549184166001600160a01b031992831617905592516002880180549190931693169290921790559051600385015591516004909301929092559151600080516020610b5e833981519152906106559085815260200190565b60405180910390a350506001016104e8565b508082600201600082825461067c9190610b1b565b90915550505050505050505050565b60008060008061069961079a565b60028101546006820154909550935090506106b48484610b4a565b915050909192565b60006106c661079a565b6001600160a01b038416600090815260018201602090815260408083203384529091529020549091508281101561072f5760405163246fb68960e21b81526001600160a01b038516600482015233602482015260448101849052606481018290526084016101c2565b61073984846107be565b6107438382610b4a565b6001600160a01b039094166000908152600190920160209081526040808420338552909152909120929092555050565b60008061077e61079a565b9050806002015481600601546107949190610b4a565b91505090565b7f10747f78c4ed48b23afd6119064f0748da54fb6a544d1f8f604eaf457d56867d90565b6001600160a01b0382166107e55760405163b817eee760e01b815260040160405180910390fd5b60006107ef61079a565b6001600160a01b0384166000908152602082905260409020549091508281101561084557604051630246530960e61b81526001600160a01b038516600482015260248101849052604481018290526064016101c2565b61084f8382610b4a565b6001600160a01b03851660009081526020849052604081209190915560028301805485929061087f908490610b4a565b92505081905550600182601001600082825461089b9190610b1b565b90915550506040805160a08101825260108401548082526001600160a01b0387811660208085018281526000868801818152606088018c81524260808a01908152978352600f8c0185528983209851895592516001890180549188166001600160a01b031992831617905590516002890180549190971691161790945551600386015592516004909401939093559251868152600080516020610b5e833981519152910160405180910390a350505050565b80356001600160a01b038116811461096457600080fd5b919050565b6000806040838503121561097c57600080fd5b6109858361094d565b946020939093013593505050565b6000602082840312156109a557600080fd5b5035919050565b602081526000825180602084015260005b818110156109da57602081860181015160408684010152016109bd565b506000604082850101526040601f19601f83011684010191505092915050565b600060208284031215610a0c57600080fd5b610a158261094d565b9392505050565b60008083601f840112610a2e57600080fd5b5081356001600160401b03811115610a4557600080fd5b6020830191508360208260051b8501011115610a6057600080fd5b9250929050565b60008060008060408587031215610a7d57600080fd5b84356001600160401b03811115610a9357600080fd5b610a9f87828801610a1c565b90955093505060208501356001600160401b03811115610abe57600080fd5b610aca87828801610a1c565b95989497509550505050565b9283526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b2e57610b2e610b05565b92915050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610b2e57610b2e610b0556feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220aacb62ac3989ff92b8d710dccbc3290c0fc240ef079f319ffbc280483b4b402264736f6c634300081c0033";

type MintingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintingFacet__factory extends ContractFactory {
  constructor(...args: MintingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MintingFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MintingFacet__factory {
    return super.connect(runner) as MintingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintingFacetInterface {
    return new Interface(_abi) as MintingFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MintingFacet {
    return new Contract(address, _abi, runner) as unknown as MintingFacet;
  }
}
