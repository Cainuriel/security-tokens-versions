/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MintingFacet,
  MintingFacetInterface,
} from "../../../contracts/Diamond/MintingFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506112fd8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806340c10f191461004657806342966c681461006257806379cc67901461007e575b600080fd5b610060600480360381019061005b9190610eb4565b61009a565b005b61007c60048036038101906100779190610ef4565b61065a565b005b61009860048036038101906100939190610eb4565b6106a3565b005b6100ae672d05e50338bf59dc60c01b610903565b6100b6610906565b601201546100ce67b0a258e6cb1ab7f160c01b610903565b6100e267ff5b7f80e567fe7d60c01b610903565b6100f667575b6022de274d3460c01b610903565b6000610100610906565b90506101166787242ad3981243cd60c01b610903565b61012a67d629a3abb551994e60c01b610903565b61013e67e8724bd16b8d02d160c01b610903565b80600801600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d490610fa4565b60405180910390fd5b6101f167b9ba463a287295dd60c01b610903565b61020567d340754706e1b24660c01b610903565b61021967b20154cd0f78c0d660c01b610903565b61022d6757904a93b0e88f4060c01b610903565b61024167c3e4995b251a4ef760c01b610903565b6102556736220eba4c920ad060c01b610903565b6102696762d35aa089c8f1f660c01b610903565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036102d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cf90611010565b60405180910390fd5b6102ec67fb84d22dee40c1b760c01b610903565b61030067a41df87863baebed60c01b610903565b61031467c15fffe96220827a60c01b610903565b600061031e610906565b905061033467aa91c9c6657ab82060c01b610903565b61034867fbaf0ffa8e4786e060c01b610903565b61035c67c77e253201f9a62c60c01b610903565b8060060154848260020154610371919061105f565b11156103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a9906110df565b60405180910390fd5b6103c667a0fbc36006ce73b960c01b610903565b6103da67e60242da5947450c60c01b610903565b838160020160008282546103ee919061105f565b925050819055506104096753e34340524ac57d60c01b610903565b838160000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045a919061105f565b92505081905550610475674fd2e14463430ba060c01b610903565b600181601001600082825461048a919061105f565b925050819055506104a567a6325284750d85fc60c01b610903565b6040518060a0016040528082601001548152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020014281525081600f016000836010015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401559050506105d967627990d6dab2df8b60c01b610903565b6105ed67f8dc988f28df30dd60c01b610903565b8473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405161064b919061110e565b60405180910390a35050505050565b61066e67d18001f303510ee260c01b610903565b610682674a26fc5a9a19534560c01b610903565b61069667ac6af33a497fdfbf60c01b610903565b6106a03382610984565b50565b6106b767950f99af7fcd9b5260c01b610903565b6106cb672de69011f6fc7d9560c01b610903565b6106df67ecf79b3c34e223bd60c01b610903565b60006106e9610906565b90506106ff67d955be0e98a8864860c01b610903565b610713678b10f8cecab750f460c01b610903565b60008160010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506107aa67abca6148e9430b4660c01b610903565b6107be67dd8f92b822df107d60c01b610903565b6107d2679d86f6080153b50c60c01b610903565b82811015610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c90611175565b60405180910390fd5b6108296762a30b439835f3dd60c01b610903565b61083d6709fcb7ffc999baa360c01b610903565b610851675500fba9ecc826cf60c01b610903565b61085b8484610984565b61086f67a05ca2fe156d4b6660c01b610903565b828161087b9190611195565b8260010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b50565b600061091c6792eaf2beeba3ab3960c01b610e18565b6109306796a737f6b340010d60c01b610e18565b61094467401d534f7425dfa560c01b610e18565b60007f4913ddf4c966b457f5d50f87a47c411d66b61feacb08ac6bcb434154c81c5c9c905061097d67167ef6c9e8f9cbbb60c01b610e18565b8091505090565b61099867cd788590d204bd6460c01b610903565b6109ac67e99bfc2ae73d4af160c01b610903565b6109c067fa9376faf0efa13160c01b610903565b6109d467d5d73825dd7a4a0260c01b610903565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a90611215565b60405180910390fd5b610a5767ee5567f4c845318c60c01b610903565b610a6b67540d7c90fe9d3d3260c01b610903565b610a7f67f7a8173e6c5b4f7260c01b610903565b6000610a89610906565b9050610a9f67932c1889b470415460c01b610903565b610ab3672e46c96c4ce0974a60c01b610903565b60008160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610b0d671b3b384e2bf5ccc860c01b610903565b610b2167ddc4396a9138036d60c01b610903565b610b356749a242d55193636c60c01b610903565b82811015610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f906112a7565b60405180910390fd5b610b8c67fd435cfb1cce5ce460c01b610903565b610ba067f7ecf668c0b8956160c01b610903565b8281610bac9190611195565b8260000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c0567290d740dfff9da5d60c01b610903565b82826002016000828254610c199190611195565b92505081905550610c34671ec07b2d0c1c105160c01b610903565b6001826010016000828254610c49919061105f565b92505081905550610c64670418867f7d16d7ef60c01b610903565b6040518060a00160405280836010015481526020018573ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281525082600f016000846010015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040155905050610d986768d26d404217507960c01b610903565b610dac671795190f835ea15160c01b610903565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610e0a919061110e565b60405180910390a350505050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4b82610e20565b9050919050565b610e5b81610e40565b8114610e6657600080fd5b50565b600081359050610e7881610e52565b92915050565b6000819050919050565b610e9181610e7e565b8114610e9c57600080fd5b50565b600081359050610eae81610e88565b92915050565b60008060408385031215610ecb57610eca610e1b565b5b6000610ed985828601610e69565b9250506020610eea85828601610e9f565b9150509250929050565b600060208284031215610f0a57610f09610e1b565b5b6000610f1884828501610e9f565b91505092915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74206973206d697373696e60008201527f6720726f6c650000000000000000000000000000000000000000000000000000602082015250565b6000610f8e602683610f21565b9150610f9982610f32565b604082019050919050565b60006020820190508181036000830152610fbd81610f81565b9050919050565b7f45524332303a206d696e7420746f207a65726f20616464726573730000000000600082015250565b6000610ffa601b83610f21565b915061100582610fc4565b602082019050919050565b6000602082019050818103600083015261102981610fed565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106a82610e7e565b915061107583610e7e565b925082820190508082111561108d5761108c611030565b5b92915050565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b60006110c9601983610f21565b91506110d482611093565b602082019050919050565b600060208201905081810360008301526110f8816110bc565b9050919050565b61110881610e7e565b82525050565b600060208201905061112360008301846110ff565b92915050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061115f601d83610f21565b915061116a82611129565b602082019050919050565b6000602082019050818103600083015261118e81611152565b9050919050565b60006111a082610e7e565b91506111ab83610e7e565b92508282039050818111156111c3576111c2611030565b5b92915050565b7f45524332303a206275726e2066726f6d207a65726f2061646472657373000000600082015250565b60006111ff601d83610f21565b915061120a826111c9565b602082019050919050565b6000602082019050818103600083015261122e816111f2565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611291602283610f21565b915061129c82611235565b604082019050919050565b600060208201905081810360008301526112c081611284565b905091905056fea2646970667358221220cb719ae9570f3cdef2fa02e65db831d98ac75bea62d8e780095d7b4cd85c701a64736f6c634300081c0033";

type MintingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintingFacet__factory extends ContractFactory {
  constructor(...args: MintingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MintingFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MintingFacet__factory {
    return super.connect(runner) as MintingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintingFacetInterface {
    return new Interface(_abi) as MintingFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MintingFacet {
    return new Contract(address, _abi, runner) as unknown as MintingFacet;
  }
}
