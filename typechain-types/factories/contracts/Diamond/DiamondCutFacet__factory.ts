/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../contracts/Diamond/DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotContractOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotContractOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "diamondCutFacetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506114378061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f931c1c146100515780632f54bf6e146100665780638da5cb5b1461008e578063f8cdeaf5146100ae575b600080fd5b61006461005f366004610e48565b6100d5565b005b610079610074366004610efe565b61012e565b60405190151581526020015b60405180910390f35b610096610152565b6040516001600160a01b039091168152602001610085565b60408051808201825260058152640312e302e360dc1b602082015290516100859190610f70565b6100dd610161565b6101276100ea8587611014565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101b692505050565b5050505050565b6000816001600160a01b03166101426103bd565b6001600160a01b03161492915050565b600061015c6103bd565b905090565b600061016b6103d9565b600401546001600160a01b031690503381146101b357604051600162bed83560e01b031981523360048201526001600160a01b03821660248201526044015b60405180910390fd5b50565b60005b83518110156103725760008482815181106101d6576101d6611156565b6020026020010151602001519050600060028111156101f7576101f761116c565b8160028111156102095761020961116c565b036102575761025285838151811061022357610223611156565b60200260200101516000015186848151811061024157610241611156565b6020026020010151604001516103fd565b610369565b600181600281111561026b5761026b61116c565b036102b45761025285838151811061028557610285611156565b6020026020010151600001518684815181106102a3576102a3611156565b60200260200101516040015161056b565b60028160028111156102c8576102c861116c565b03610311576102528583815181106102e2576102e2611156565b60200260200101516000015186848151811061030057610300611156565b6020026020010151604001516106ec565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016101aa565b506001016101b9565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103a693929190611182565b60405180910390a16103b882826107fc565b505050565b60006103c76103d9565b600401546001600160a01b0316919050565b7f591a66cdc36a46902055fe7f9f195cd083ee999373b7ae1a10dcb19a6c1f59d190565b600081511161041e5760405162461bcd60e51b81526004016101aa90611291565b60006104286103d9565b90506001600160a01b0383166104505760405162461bcd60e51b81526004016101aa906112dc565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036104865761048682856108fc565b60005b83518110156101275760008482815181106104a6576104a6611156565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156105445760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016101aa565b6105508583868a610966565b8361055a8161133e565b945050600190920191506104899050565b600081511161058c5760405162461bcd60e51b81526004016101aa90611291565b60006105966103d9565b90506001600160a01b0383166105be5760405162461bcd60e51b81526004016101aa906112dc565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036105f4576105f482856108fc565b60005b835181101561012757600084828151811061061457610614611156565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036106ba5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527731ba34b7b7103bb4ba341039b0b6b290333ab731ba34b7b760411b60648201526084016101aa565b6106c5858284610a06565b6106d18583868a610966565b836106db8161133e565b945050600190920191506105f79050565b600081511161070d5760405162461bcd60e51b81526004016101aa90611291565b60006107176103d9565b90506001600160a01b0383161561078f5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016101aa565b60005b82518110156107f65760008382815181106107af576107af611156565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166107ec848284610a06565b5050600101610792565b50505050565b6001600160a01b03821661080e575050565b610830826040518060600160405280602881526020016113b660289139610dc3565b600080836001600160a01b03168360405161084b919061136a565b600060405180830381855af49150503d8060008114610886576040519150601f19603f3d011682016040523d82523d6000602084013e61088b565b606091505b5091509150816107f6578051156108a55780518082602001fd5b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016101aa565b61091e816040518060600160405280602481526020016113de60249139610dc3565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b038216610a7c5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e636044820152761d1a5bdb881d1a185d08191bd95cdb89dd08195e1a5cdd604a1b60648201526084016101aa565b306001600160a01b03831603610aeb5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016101aa565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610b3a91611386565b9050808214610c2c576001600160a01b03841660009081526001860160205260408120805483908110610b6f57610b6f611156565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610bc057610bc0611156565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610c5557610c5561139f565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610127576002850154600090610cb890600190611386565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610d67576000876002018381548110610cf757610cf7611156565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610d2857610d28611156565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610d7a57610d7a61139f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816107f65760405162461bcd60e51b81526004016101aa9190610f70565b80356001600160a01b0381168114610dfb57600080fd5b919050565b60008083601f840112610e1257600080fd5b5081356001600160401b03811115610e2957600080fd5b602083019150836020828501011115610e4157600080fd5b9250929050565b600080600080600060608688031215610e6057600080fd5b85356001600160401b03811115610e7657600080fd5b8601601f81018813610e8757600080fd5b80356001600160401b03811115610e9d57600080fd5b8860208260051b8401011115610eb257600080fd5b602091820196509450610ec6908701610de4565b925060408601356001600160401b03811115610ee157600080fd5b610eed88828901610e00565b969995985093965092949392505050565b600060208284031215610f1057600080fd5b610f1982610de4565b9392505050565b60005b83811015610f3b578181015183820152602001610f23565b50506000910152565b60008151808452610f5c816020860160208601610f20565b601f01601f19169290920160200192915050565b602081526000610f196020830184610f44565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610fbb57610fbb610f83565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610fe957610fe9610f83565b604052919050565b60006001600160401b0382111561100a5761100a610f83565b5060051b60200190565b600061102761102284610ff1565b610fc1565b8381526020810190600585901b84013681111561104357600080fd5b845b8181101561114b5780356001600160401b0381111561106357600080fd5b8601606036829003121561107657600080fd5b61107e610f99565b61108782610de4565b815260208201356003811061109b57600080fd5b602082015260408201356001600160401b038111156110b957600080fd5b919091019036601f8301126110cd57600080fd5b81356110db61102282610ff1565b8082825260208201915060208360051b8601019250368311156110fd57600080fd5b6020850194505b828510156111355784356001600160e01b03198116811461112457600080fd5b825260209485019490910190611104565b6040840152505085525060209384019301611045565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000606082016060835280865180835260808501915060808160051b86010192506020880160005b8281101561126257868503607f19018452815180516001600160a01b0316865260208101516060870190600381106111f257634e487b7160e01b600052602160045260246000fd5b806020890152506040820151915060606040880152808251808352608089019150602084019350600092505b8083101561124a5783516001600160e01b0319168252602093840193600193909301929091019061121e565b509650505060209384019391909101906001016111aa565b5050506001600160a01b03861660208501525082810360408401526112878185610f44565b9695505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b0382166002600160601b0319810161136157611361611328565b60010192915050565b6000825161137c818460208701610f20565b9190910192915050565b8181038181111561139957611399611328565b92915050565b634e487b7160e01b600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212205e7c18de753a64ce8a60d427f97ac5810fbdaa7f89b9661e6fe3753f0af0cefd64736f6c634300081c0033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondCutFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondCutFacet__factory {
    return super.connect(runner) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondCutFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondCutFacet;
  }
}
