/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../contracts/Diamond/DiamondCutFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061135d8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610d89565b610045565b005b61004d61009e565b61009761005a8587610ed0565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011392505050565b5050505050565b6100a661031a565b600401546001600160a01b031633146101115760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084015b60405180910390fd5b565b60005b83518110156102cf57600084828151811061013357610133611012565b60200260200101516020015190506000600281111561015457610154611028565b81600281111561016657610166611028565b036101b4576101af85838151811061018057610180611012565b60200260200101516000015186848151811061019e5761019e611012565b60200260200101516040015161033e565b6102c6565b60018160028111156101c8576101c8611028565b03610211576101af8583815181106101e2576101e2611012565b60200260200101516000015186848151811061020057610200611012565b6020026020010151604001516104ac565b600281600281111561022557610225611028565b0361026e576101af85838151811061023f5761023f611012565b60200260200101516000015186848151811061025d5761025d611012565b60200260200101516040015161062d565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b6064820152608401610108565b50600101610116565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103039392919061108e565b60405180910390a1610315828261073d565b505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b600081511161035f5760405162461bcd60e51b81526004016101089061119d565b600061036961031a565b90506001600160a01b0383166103915760405162461bcd60e51b8152600401610108906111e8565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036103c7576103c7828561083d565b60005b83518110156100975760008482815181106103e7576103e7611012565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104855760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b6064820152608401610108565b6104918583868a6108a7565b8361049b8161124a565b945050600190920191506103ca9050565b60008151116104cd5760405162461bcd60e51b81526004016101089061119d565b60006104d761031a565b90506001600160a01b0383166104ff5760405162461bcd60e51b8152600401610108906111e8565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361053557610535828561083d565b60005b835181101561009757600084828151811061055557610555611012565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036105fb5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527731ba34b7b7103bb4ba341039b0b6b290333ab731ba34b7b760411b6064820152608401610108565b610606858284610947565b6106128583868a6108a7565b8361061c8161124a565b945050600190920191506105389050565b600081511161064e5760405162461bcd60e51b81526004016101089061119d565b600061065861031a565b90506001600160a01b038316156106d05760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b6064820152608401610108565b60005b82518110156107375760008382815181106106f0576106f0611012565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031661072d848284610947565b50506001016106d3565b50505050565b6001600160a01b03821661074f575050565b610771826040518060600160405280602881526020016112dc60289139610d04565b600080836001600160a01b03168360405161078c9190611276565b600060405180830381855af49150503d80600081146107c7576040519150601f19603f3d011682016040523d82523d6000602084013e6107cc565b606091505b509150915081610737578051156107e65780518082602001fd5b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b6064820152608401610108565b61085f8160405180606001604052806024815260200161130460249139610d04565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166109bd5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e636044820152761d1a5bdb881d1a185d08191bd95cdb89dd08195e1a5cdd604a1b6064820152608401610108565b306001600160a01b03831603610a2c5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608401610108565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610a7b91611292565b9050808214610b6d576001600160a01b03841660009081526001860160205260408120805483908110610ab057610ab0611012565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610b0157610b01611012565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610b9657610b966112ab565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610097576002850154600090610bf990600190611292565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ca8576000876002018381548110610c3857610c38611012565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610c6957610c69611012565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610cbb57610cbb6112ab565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816107375760405162461bcd60e51b815260040161010891906112c1565b80356001600160a01b0381168114610d3c57600080fd5b919050565b60008083601f840112610d5357600080fd5b5081356001600160401b03811115610d6a57600080fd5b602083019150836020828501011115610d8257600080fd5b9250929050565b600080600080600060608688031215610da157600080fd5b85356001600160401b03811115610db757600080fd5b8601601f81018813610dc857600080fd5b80356001600160401b03811115610dde57600080fd5b8860208260051b8401011115610df357600080fd5b602091820196509450610e07908701610d25565b925060408601356001600160401b03811115610e2257600080fd5b610e2e88828901610d41565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610e7757610e77610e3f565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610ea557610ea5610e3f565b604052919050565b60006001600160401b03821115610ec657610ec6610e3f565b5060051b60200190565b6000610ee3610ede84610ead565b610e7d565b8381526020810190600585901b840136811115610eff57600080fd5b845b818110156110075780356001600160401b03811115610f1f57600080fd5b86016060368290031215610f3257600080fd5b610f3a610e55565b610f4382610d25565b8152602082013560038110610f5757600080fd5b602082015260408201356001600160401b03811115610f7557600080fd5b919091019036601f830112610f8957600080fd5b8135610f97610ede82610ead565b8082825260208201915060208360051b860101925036831115610fb957600080fd5b6020850194505b82851015610ff15784356001600160e01b031981168114610fe057600080fd5b825260209485019490910190610fc0565b6040840152505085525060209384019301610f01565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60005b83811015611059578181015183820152602001611041565b50506000910152565b6000815180845261107a81602086016020860161103e565b601f01601f19169290920160200192915050565b6000606082016060835280865180835260808501915060808160051b86010192506020880160005b8281101561116e57868503607f19018452815180516001600160a01b0316865260208101516060870190600381106110fe57634e487b7160e01b600052602160045260246000fd5b806020890152506040820151915060606040880152808251808352608089019150602084019350600092505b808310156111565783516001600160e01b0319168252602093840193600193909301929091019061112a565b509650505060209384019391909101906001016110b6565b5050506001600160a01b03861660208501525082810360408401526111938185611062565b9695505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b0382166002600160601b0319810161126d5761126d611234565b60010192915050565b6000825161128881846020870161103e565b9190910192915050565b818103818111156112a5576112a5611234565b92915050565b634e487b7160e01b600052603160045260246000fd5b6020815260006112d46020830184611062565b939250505056fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220efc12c2ffcd4a90760914b06d644a969ee288593c92a83f4ca9a2fa00984e6be64736f6c634300081c0033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondCutFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondCutFacet__factory {
    return super.connect(runner) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondCutFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondCutFacet;
  }
}
