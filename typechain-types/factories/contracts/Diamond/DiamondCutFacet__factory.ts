/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../contracts/Diamond/DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotContractOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotContractOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "diamondCutFacetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506113788061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631f931c1c1461003b578063f8cdeaf514610050575b600080fd5b61004e610049366004610da4565b610080565b005b60408051808201825260058152640312e302e360dc1b602082015290516100779190610eaa565b60405180910390f35b6100886100d9565b6100d26100958587610f55565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061012e92505050565b5050505050565b60006100e3610335565b600401546001600160a01b0316905033811461012b57604051600162bed83560e01b031981523360048201526001600160a01b03821660248201526044015b60405180910390fd5b50565b60005b83518110156102ea57600084828151811061014e5761014e611097565b60200260200101516020015190506000600281111561016f5761016f6110ad565b816002811115610181576101816110ad565b036101cf576101ca85838151811061019b5761019b611097565b6020026020010151600001518684815181106101b9576101b9611097565b602002602001015160400151610359565b6102e1565b60018160028111156101e3576101e36110ad565b0361022c576101ca8583815181106101fd576101fd611097565b60200260200101516000015186848151811061021b5761021b611097565b6020026020010151604001516104c7565b6002816002811115610240576102406110ad565b03610289576101ca85838151811061025a5761025a611097565b60200260200101516000015186848151811061027857610278611097565b602002602001015160400151610648565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b6064820152608401610122565b50600101610131565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161031e939291906110c3565b60405180910390a16103308282610758565b505050565b7f591a66cdc36a46902055fe7f9f195cd083ee999373b7ae1a10dcb19a6c1f59d190565b600081511161037a5760405162461bcd60e51b8152600401610122906111d2565b6000610384610335565b90506001600160a01b0383166103ac5760405162461bcd60e51b81526004016101229061121d565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036103e2576103e28285610858565b60005b83518110156100d257600084828151811061040257610402611097565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104a05760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b6064820152608401610122565b6104ac8583868a6108c2565b836104b68161127f565b945050600190920191506103e59050565b60008151116104e85760405162461bcd60e51b8152600401610122906111d2565b60006104f2610335565b90506001600160a01b03831661051a5760405162461bcd60e51b81526004016101229061121d565b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610550576105508285610858565b60005b83518110156100d257600084828151811061057057610570611097565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036106165760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527731ba34b7b7103bb4ba341039b0b6b290333ab731ba34b7b760411b6064820152608401610122565b610621858284610962565b61062d8583868a6108c2565b836106378161127f565b945050600190920191506105539050565b60008151116106695760405162461bcd60e51b8152600401610122906111d2565b6000610673610335565b90506001600160a01b038316156106eb5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b6064820152608401610122565b60005b825181101561075257600083828151811061070b5761070b611097565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610748848284610962565b50506001016106ee565b50505050565b6001600160a01b03821661076a575050565b61078c826040518060600160405280602881526020016112f760289139610d1f565b600080836001600160a01b0316836040516107a791906112ab565b600060405180830381855af49150503d80600081146107e2576040519150601f19603f3d011682016040523d82523d6000602084013e6107e7565b606091505b509150915081610752578051156108015780518082602001fd5b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b6064820152608401610122565b61087a8160405180606001604052806024815260200161131f60249139610d1f565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166109d85760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e636044820152761d1a5bdb881d1a185d08191bd95cdb89dd08195e1a5cdd604a1b6064820152608401610122565b306001600160a01b03831603610a475760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b6064820152608401610122565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610a96916112c7565b9050808214610b88576001600160a01b03841660009081526001860160205260408120805483908110610acb57610acb611097565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610b1c57610b1c611097565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610bb157610bb16112e0565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036100d2576002850154600090610c14906001906112c7565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610cc3576000876002018381548110610c5357610c53611097565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610c8457610c84611097565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610cd657610cd66112e0565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816107525760405162461bcd60e51b81526004016101229190610eaa565b80356001600160a01b0381168114610d5757600080fd5b919050565b60008083601f840112610d6e57600080fd5b5081356001600160401b03811115610d8557600080fd5b602083019150836020828501011115610d9d57600080fd5b9250929050565b600080600080600060608688031215610dbc57600080fd5b85356001600160401b03811115610dd257600080fd5b8601601f81018813610de357600080fd5b80356001600160401b03811115610df957600080fd5b8860208260051b8401011115610e0e57600080fd5b602091820196509450610e22908701610d40565b925060408601356001600160401b03811115610e3d57600080fd5b610e4988828901610d5c565b969995985093965092949392505050565b60005b83811015610e75578181015183820152602001610e5d565b50506000910152565b60008151808452610e96816020860160208601610e5a565b601f01601f19169290920160200192915050565b602081526000610ebd6020830184610e7e565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715610efc57610efc610ec4565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610f2a57610f2a610ec4565b604052919050565b60006001600160401b03821115610f4b57610f4b610ec4565b5060051b60200190565b6000610f68610f6384610f32565b610f02565b8381526020810190600585901b840136811115610f8457600080fd5b845b8181101561108c5780356001600160401b03811115610fa457600080fd5b86016060368290031215610fb757600080fd5b610fbf610eda565b610fc882610d40565b8152602082013560038110610fdc57600080fd5b602082015260408201356001600160401b03811115610ffa57600080fd5b919091019036601f83011261100e57600080fd5b813561101c610f6382610f32565b8082825260208201915060208360051b86010192503683111561103e57600080fd5b6020850194505b828510156110765784356001600160e01b03198116811461106557600080fd5b825260209485019490910190611045565b6040840152505085525060209384019301610f86565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000606082016060835280865180835260808501915060808160051b86010192506020880160005b828110156111a357868503607f19018452815180516001600160a01b03168652602081015160608701906003811061113357634e487b7160e01b600052602160045260246000fd5b806020890152506040820151915060606040880152808251808352608089019150602084019350600092505b8083101561118b5783516001600160e01b0319168252602093840193600193909301929091019061115f565b509650505060209384019391909101906001016110eb565b5050506001600160a01b03861660208501525082810360408401526111c88185610e7e565b9695505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b0382166002600160601b031981016112a2576112a2611269565b60010192915050565b600082516112bd818460208701610e5a565b9190910192915050565b818103818111156112da576112da611269565b92915050565b634e487b7160e01b600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220b4ffbaa6c5e46eb4b6b7d54518721c7bf032218f56a847d42d7dd2c48431fc7d64736f6c634300081c0033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondCutFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondCutFacet__factory {
    return super.connect(runner) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondCutFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondCutFacet;
  }
}
