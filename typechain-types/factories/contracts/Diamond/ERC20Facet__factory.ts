/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Facet,
  ERC20FacetInterface,
} from "../../../contracts/Diamond/ERC20Facet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610ad78061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806306fdde0314610088578063095ea7b3146100a657806318160ddd146100c957806323b872dd146100df578063313ce567146100f257806370a082311461010c57806395d89b411461011f578063a9059cbb14610127578063dd62ed3e1461013a575b600080fd5b61009061014d565b60405161009d9190610905565b60405180910390f35b6100b96100b436600461096f565b6101e8565b604051901515815260200161009d565b6100d16101ff565b60405190815260200161009d565b6100b96100ed366004610999565b610212565b6100fa6102c6565b60405160ff909116815260200161009d565b6100d161011a3660046109d6565b6102dc565b610090610305565b6100b961013536600461096f565b61031d565b6100d16101483660046109f8565b61032a565b6060610157610364565b600301805461016590610a2b565b80601f016020809104026020016040519081016040528092919081815260200182805461019190610a2b565b80156101de5780601f106101b3576101008083540402835291602001916101de565b820191906000526020600020905b8154815290600101906020018083116101c157829003601f168201915b5050505050905090565b60006101f5338484610388565b5060015b92915050565b6000610209610364565b60020154905090565b60008061021d610364565b6001600160a01b038616600090815260018201602090815260408083203384529091529020549091508381101561029b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064015b60405180910390fd5b6102a68686866104a5565b6102ba86336102b58785610a7b565b610388565b50600195945050505050565b60006102d0610364565b6005015460ff16919050565b60006102e6610364565b6001600160a01b03909216600090815260209290925250604090205490565b606061030f610364565b600401805461016590610a2b565b60006101f53384846104a5565b6000610334610364565b6001600160a01b039384166000908152600191909101602090815260408083209490951682529290925250205490565b7f4913ddf4c966b457f5d50f87a47c411d66b61feacb08ac6bcb434154c81c5c9c90565b6001600160a01b0383166103de5760405162461bcd60e51b815260206004820181905260248201527f45524332303a20617070726f76652066726f6d207a65726f20616464726573736044820152606401610292565b6001600160a01b0382166104345760405162461bcd60e51b815260206004820152601e60248201527f45524332303a20617070726f766520746f207a65726f206164647265737300006044820152606401610292565b8061043d610364565b6001600160a01b038581166000818152600193909301602090815260408085209388168086529382529384902094909455915184815290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105055760405162461bcd60e51b815260206004820152602160248201527f45524332303a207472616e736665722066726f6d207a65726f206164647265736044820152607360f81b6064820152608401610292565b6001600160a01b03821661055b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a207472616e7366657220746f207a65726f2061646472657373006044820152606401610292565b6000610565610364565b600781015490915060ff16156105d05760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610292565b6001600160a01b0384166000908152600d8201602052604090205460ff166106365760405162461bcd60e51b815260206004820152601960248201527814d95b99195c881a5cc81b9bdd081dda1a5d195b1a5cdd1959603a1b6044820152606401610292565b6001600160a01b0384166000908152600e8201602052604090205460ff16156106995760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881a5cc8189b1858dadb1a5cdd1959605a1b6044820152606401610292565b6001600160a01b0383166000908152600d8201602052604090205460ff166107025760405162461bcd60e51b815260206004820152601c60248201527b149958da5c1a595b9d081a5cc81b9bdd081dda1a5d195b1a5cdd195960221b6044820152606401610292565b6001600160a01b0383166000908152600e8201602052604090205460ff16156107685760405162461bcd60e51b8152602060048201526018602482015277149958da5c1a595b9d081a5cc8189b1858dadb1a5cdd195960421b6044820152606401610292565b6001600160a01b038416600090815260208290526040902054828110156107e05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610292565b6107ea8382610a7b565b6001600160a01b038087166000908152602085905260408082209390935590861681529081208054859290610820908490610a8e565b92505081905550600182601001600082825461083c9190610a8e565b90915550506040805160a08101825260108401548082526001600160a01b0388811660208085018281528a8416868801818152606088018c81524260808a019081526000988952600f8d018652978a90209851895592516001890180549188166001600160a01b0319928316179055905160028901805491909716911617909455516003860155925160049094019390935592518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050505050565b602081526000825180602084015260005b818110156109335760208186018101516040868401015201610916565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461096a57600080fd5b919050565b6000806040838503121561098257600080fd5b61098b83610953565b946020939093013593505050565b6000806000606084860312156109ae57600080fd5b6109b784610953565b92506109c560208501610953565b929592945050506040919091013590565b6000602082840312156109e857600080fd5b6109f182610953565b9392505050565b60008060408385031215610a0b57600080fd5b610a1483610953565b9150610a2260208401610953565b90509250929050565b600181811c90821680610a3f57607f821691505b602082108103610a5f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101f9576101f9610a65565b808201808211156101f9576101f9610a6556fea2646970667358221220d2ee66d38c751c427b2d33e3fea0531d9446596ac214380f1322dcea646a4dec64736f6c634300081c0033";

type ERC20FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Facet__factory extends ContractFactory {
  constructor(...args: ERC20FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Facet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Facet__factory {
    return super.connect(runner) as ERC20Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FacetInterface {
    return new Interface(_abi) as ERC20FacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Facet {
    return new Contract(address, _abi, runner) as unknown as ERC20Facet;
  }
}
